name: Deployment pipeline

on:
  push:
    branches: ['main']

jobs:
  create-deployment-artifact:
    name: Create deployment artifact
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Package and store artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=.git --exclude=*.env *

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz
  prepare-release-on-server:
    runs-on: ubuntu-latest
    needs: create-deployment-artifact
    name: Prepare release on server
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-build
      - name: Upload artifact to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          source: ${{ github.sha }}.tar.gz
          target: ${{ vars.APP_PATH }}/artifacts
      - name: Extract app archive
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            mkdir -p ${{ vars.APP_PATH }}/releases/${GITHUB_SHA}
            tar -xzf ${{ vars.APP_PATH }}/artifacts/${GITHUB_SHA}.tar.gz -C ${{ vars.APP_PATH }}/releases/${GITHUB_SHA}
  configure-nginx-on-server:
    runs-on: ubuntu-latest
    needs: [create-deployment-artifact, prepare-release-on-server]
    name: Configure NGINX on server
    steps:
      - name: Configuring NGINX
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            sudo cp ${{ vars.APP_PATH }}/releases/${GITHUB_SHA}/nginx/laravel-app /etc/nginx/sites-available/
            sudo ln -s -n -f /etc/nginx/sites-available/laravel-app /etc/nginx/sites-enabled/
  run-before-hooks:
    runs-on: ubuntu-latest
    needs:
      [
        create-deployment-artifact,
        prepare-release-on-server,
      ]
    name: The before hook
    steps:
      - name: Run before hook
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: ${{ vars.APP_PATH }}/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: ${{ vars.APP_PATH }}/current
          BASE_PATH: ${{ vars.APP_PATH }}
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,BASE_PATH
          script: |
            echo release folder: $RELEASE_PATH
            sudo chown -R www-data $RELEASE_PATH
            sudo ln -s -n -f ${{ vars.DB_PATH }}/database.sqlite $RELEASE_PATH/database
            printf "%s" "${{ vars.ENV_FILE }}" > ${{ vars.APP_PATH }}/.env
            sudo ln -s -n -f ${{ vars.APP_PATH }}/.env $RELEASE_PATH
            cd $RELEASE_PATH && composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist  && sudo chmod -R 775 public database  && sudo chmod -R 777 storage && php artisan migrate --force
  activate-release:
    runs-on: ubuntu-latest
    needs:
      [
        create-deployment-artifact,
        prepare-release-on-server,
        configure-nginx-on-server,
        run-before-hooks,
      ]
    name: Activate release
    steps:
      - name: Activate new release
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: ${{ vars.APP_PATH }}/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: ${{ vars.APP_PATH }}/current
          BASE_PATH: ${{ vars.APP_PATH }}
          ENV_FILE: ${{ vars.ENV_FILE }}
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,BASE_PATH,ENV_FILE
          script: |
            sudo ln -s -n -f $RELEASE_PATH ${{ vars.APP_PATH }}/current
            sudo nginx -t
            sudo service nginx restart
  clean-up:
    runs-on: ubuntu-latest
    needs:
      [
        create-deployment-artifact,
        prepare-release-on-server,
        configure-nginx-on-server,
        run-before-hooks,
        activate-release,
      ]
    name: Server Clean upp
    steps:
      - name: Run clean up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          script: |
            cd ${{ vars.APP_PATH }}/releases && ls -t -1 | tail -n +6 | xargs rm -rf;
            cd ${{ vars.APP_PATH }}/artifacts && ls -t -1 | tail -n +6 | xargs rm -rf;
